unit Service.Clientes;



interface

uses
  {Classes,
  Controls,
     ExtCtrls,
     Dialogs,
     FireDAC.Comp.Client};

type
  TCliente = class
  private
    F_ConexaoDB:TFDConnection;
    F_codigo:Integer;
    F_nome:String;
    F_cidade:String;
    F_estado:String;
  public
    constructor Create(aConexao:TFDConnection);
    destructor Destroy; override;
    function Selecionar(id:string):Boolean;

 protected
    property ConexaoDB :TFDConnection   read F_ConexaoDB     write F_ConexaoDB;

  published
    property codigo:Integer  read F_codigo write F_codigo;
    property nome:String     read F_nome write F_nome;
    property cidade:String   read F_cidade write F_cidade;
    property estado:String   read F_estado write F_estado;

end;

implementation

{TTCliente}

{$region 'Constructor and Destructor'}
constructor TCliente.Create(aConexao:TFDConnection);
begin
  ConexaoDB:=aConexao;
end;

destructor TCliente.Destroy;
begin
  inherited;
end;
{$endRegion}

{$region 'CRUD'}
function TCliente.Selecionar(id:string): Boolean;
var QCliente:TFDQuery;
begin
  try
    Result:=true;
    QCliente:=TFDQuery.Create(nil);
    QCliente.Connection:=ConexaoDB;
    QCliente.SQL.Clear;
    QCliente.SQL.Add(' SELECT '+
                '      codigo '+
                '      ,nome '+
                '      ,cidade '+
                '      ,estado '+
                ' FROM clientes' +
                ' WHERE codigo=:id ');
    QCliente.ParamByName('Id').AsString:=id;
    QCliente.Open;
    Self.F_codigo := QCliente.FieldByName('codigo').AsInteger;
    Self.F_nome := QCliente.FieldByName('nome').AsString;
    Self.F_cidade := QCliente.FieldByName('cidade').AsString;
    Self.F_estado := QCliente.FieldByName('estado').AsString;
  finally
   if Assigned(QCliente) then
      FreeAndNil(QCliente);
  end;
end;
{$endRegion}
end.
